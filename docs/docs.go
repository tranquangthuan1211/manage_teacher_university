// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Quang Thuan",
            "url": "0977109327",
            "email": "tranquanthuan132@gmail.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/users": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Return a list of users by giving a filter. A filter can be formed based on the data columns of a table. For example ?num_staff=10\u0026name=\"Trạm cân 10\"\u0026deleted=true. You can also search for more values for a field, for example ?num_staff=10\u0026num_staff=9.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get a list of users [OK]",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Role filter",
                        "name": "role",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Deleted Filter",
                        "name": "deleted",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Student name for searching",
                        "name": "sort-field",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Student name for searching",
                        "name": "major",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Student name for searching",
                        "name": "sort-option",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/database.GetAllUserDataResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.HTTPError400"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Register a new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "User register [OK]",
                "parameters": [
                    {
                        "description": "Register information",
                        "name": "Info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/database.Register"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/database.Register"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.HTTPError400"
                        }
                    }
                }
            }
        },
        "/users/change-password": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Change user password.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Change user password [OK]",
                "parameters": [
                    {
                        "description": "Change password data",
                        "name": "ChangePassData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/database.ChangePassData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/database.UserDataResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.HTTPError400"
                        }
                    }
                }
            }
        },
        "/users/info": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns user information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get user information [OK]",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/database.UserDataResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.HTTPError400"
                        }
                    }
                }
            }
        },
        "/users/login": {
            "post": {
                "description": "User login with username and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "User login [OK]",
                "parameters": [
                    {
                        "description": "Login information",
                        "name": "Info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/database.Login"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/database.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.HTTPError400"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.HTTPError500"
                        }
                    }
                }
            }
        },
        "/users/many": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Post many users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Post many users [OK]",
                "parameters": [
                    {
                        "description": "User data",
                        "name": "Info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/database.Register"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The number of inserted rows",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.HTTPError400"
                        }
                    }
                }
            }
        },
        "/users/reset_num_certificates": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Reset num_certificates",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Reset num_certificates [OK]",
                "responses": {
                    "200": {
                        "description": "The number of updated rows",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.HTTPError400"
                        }
                    }
                }
            }
        },
        "/users/reset_num_complains": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Reset num_certificates",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Reset num_certificates [OK]",
                "responses": {
                    "200": {
                        "description": "The number of updated rows",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.HTTPError400"
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns deleted rows",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Delete an user [OK]",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The number of deleted rows",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.HTTPError400"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns the number of rows updated",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Update a user [OK]",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User data to update. We can update all fields and omit fields that don't need to be updated, the API only updates those fields present in the object.",
                        "name": "Good",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/database.UserUpdateData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The number of updated rows",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.HTTPError400"
                        }
                    }
                }
            }
        },
        "/users/{id}/change-password": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Reset user password.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Reset user password [OK]",
                "parameters": [
                    {
                        "description": "Change password data",
                        "name": "ChangePassData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/database.ResetPassData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/database.UserDataResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.HTTPError400"
                        }
                    }
                }
            }
        },
        "/teach": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Return a list of users by giving a filter. A filter can be formed based on the data columns of a table. For example ?num_staff=10\u0026name=\"Trạm cân 10\"\u0026deleted=true. You can also search for more values for a field, for example ?num_staff=10\u0026num_staff=9.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Teachers"
                ],
                "summary": "Get a list of users [OK]",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/database.GetAllUserDataResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.HTTPError400"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Register a new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Teachers"
                ],
                "summary": "User register [OK]",
                "parameters": [
                    {
                        "description": "Register information",
                        "name": "Info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/database.Register"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/database.Register"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.HTTPError400"
                        }
                    }
                }
            }
        },
        
    },
    "definitions": {
        "database.GetAllUserDataResponse": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "ndan.itus@gmail.com"
                },
                "grant_role": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "abc",
                        "xyz"
                    ]
                },
                "id": {
                    "type": "string"
                },
                "major": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "example": "Nguyễn Đăng An"
                },
                "num_certificates": {
                    "type": "integer"
                },
                "num_complains": {
                    "type": "integer"
                },
                "officer_id": {
                    "type": "string",
                    "example": "4232"
                },
                "password": {
                    "type": "string",
                    "example": "123"
                },
                "phone": {
                    "type": "string",
                    "example": "0379823839"
                },
                "position": {
                    "type": "string"
                },
                "role": {
                    "type": "string",
                    "example": "user"
                },
                "school": {
                    "type": "string",
                    "example": "stu"
                },
                "student_id": {
                    "type": "string",
                    "example": "14120234"
                },
                "unit_id": {
                    "type": "string",
                    "example": "Hội sinh viên"
                },
                "username": {
                    "type": "string",
                    "example": "ndan.itus@gmail.com"
                }
            }
        },
        "database.Login": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "example": "123"
                },
                "username": {
                    "type": "string",
                    "example": "ndan.itus@gmail.com"
                }
            }
        },
        "database.LoginResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "data": {
                    "$ref": "#/definitions/database.UserDataResponse"
                },
                "expire": {
                    "type": "string",
                    "example": "2005-08-15T15:52:01+00:00"
                },
                "token": {
                    "type": "string",
                    "example": "iuniu32neui3rn38fh784e5yn78f5r57R\u0026FGU*^TU?;.'grteuiHIUN98"
                }
            }
        },
        "database.Register": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "ndan.itus@gmail.com"
                },
                "grant_role": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "abc",
                        "xyz"
                    ]
                },
                "name": {
                    "type": "string",
                    "example": "Nguyễn Đăng An"
                },
                "officer_id": {
                    "type": "string",
                    "example": "4232"
                },
                "password": {
                    "type": "string",
                    "example": "123"
                },
                "phone": {
                    "type": "string",
                    "example": "0379823839"
                },
                "position": {
                    "type": "string"
                },
                "role": {
                    "description": "\"officer\" or \"student\" (default)",
                    "type": "string",
                    "example": "officer"
                },
                "student_id": {
                    "type": "string",
                    "example": "14120234"
                },
                "unit_id": {
                    "type": "string",
                    "example": "Hội sinh viên"
                }
            }
        },
        "database.SignInsertData": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "database.SignResponseData": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2023-08-17T15:40:58.131023+07:00"
                },
                "deleted_at": {
                    "type": "string",
                    "example": "2023-08-17T15:40:58.131023+07:00"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2023-08-17T15:40:58.131023+07:00"
                }
            }
        },
        "model.HTTPError400": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Status bad request"
                }
            }
        },
        "model.HTTPError500": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Internal server error"
                }
            }
        },
        "types.JsonPsql": {
            "type": "object",
            "properties": {
                "val": {}
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "description": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJJRCI6ImM2NTRmNDA1LTdlMjYtNDI4ZS05OWQ0LWE5MDg4MmY5YWVjYSIsIk5hbWUiOiJwY3RzdmhjbXVzIiwiUm9sZSI6ImFkbWluIiwiU2Nob29sIjoiaGNtdXMiLCJleHAiOjE3MTg2MzkxMDQsIm9yaWdfaWF0IjoxNzAzMDg3MTA0fQ._oBOk8qaqyrVv42kFNdks32yfS_ZzxbVBmdZhT2JgXk",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    },
    "tags": [
        {
            "description": "All APIs to interact with users",
            "name": "Users"
        },
        {
            "description": "All APIs to interact with teachers",
            name: "Teachers"
        },
    ]
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "QLGV API Docs",
	Description:      "This is the QLGV API Docs for using internally.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
